/* Global */

:root {
  /* color */
  --color-white: #ffffff;
  --color-light-white: #eeeeee;
  --color-dark-white: #bdbdbd;
  --color-black: #4d4d4d;
  --color-dark-grey: #4d4d4d;
  --color-grey: #616161;
  --color-light-grey: #7c7979;
  --color-light-yellow: #fff7d1;
  --color-orange: #feb546;
  --color-dark-orange: #ff8c00;
  --color-yellow: #ffde59;
  --color-light-blue: #73aace;
  --color-pink: #fe918d;
  --color-dark-pink: #ff6863;
  --color-grey-yellow: #fbeac4;
  --color-blue: blue;

  /* font size */
  --font-large: 48px;
  --font-less-large: 35px;
  --font-medium: 28px;
  --font-regular: 22px;
  --font-small: 18px;
  --font-micro: 14px;

  /* font weight */
  --weight-bold: 700;
  --weight-semi-bold: 600;
  --weight-regular: 400;

  /* size */
  --size-border-radius: 4px;

  /* animation */
  --animation-duration: 300ms;
  --animation-short-duration: 100ms;
}

/* universal tags */
* {
  box-sizing: border-box;
}

body {
  font-family: "Open Sans", sans-serif;
  margin: 0;
}

a {
  text-decoration: none;
}

.pic-person {
  width: 230px;
  height: 200px;
  border-radius: 50%;
}

ul {
  list-style: none;
}

li {
  list-style: none;
  font-size: var(--font-regular);
}

button {
  border: none;
  outline: none;
}

section {
  margin: 1vh 1vw;
}

footer {
  padding: 1vh 1vw;
}

.resume article {
  display: flex;
  flex-direction: row;
  justify-content: space-between;
  padding: 5vh 3vw;
}

.experience-education article {
  display: flex;
  flex-direction: row;
}

.btn-progess-effect {
  background-color: var(--color-dark-orange);
  font-size: var(--font-medium);
}

.btn-effect {
  cursor: pointer;
  padding: 3px;
  /* 버튼 effect 패딩이 너무 많아도 안 좋음 */
  /* 누르면 작동 안되는 곳이 생겨서 */
  border-radius: var(--size-border-radius);
}

.btn-effect:hover {
  background-color: var(--color-dark-orange);
  transform: scale(1.2);
  font-size: var(--font-medium);
}

.btn-effect:active {
  background-color: var(--color-dark-orange);
  transform: scale(0.8);
  font-size: var(--font-small);
}

.btn-effect-logo:hover {
  transform: scale(1.2);
  color: var(--color-dark-orange);
}

.btn-effect-logo:active {
  transform: scale(0.8);
  color: var(--color-dark-orange);
}

/* typography */
h1 {
  display: flex;
  flex-direction: row;
  justify-content: center;
  align-items: center;
  margin: 50px 0;
}

.rect {
  color: var(--color-blue);
  margin: 0 10px;
  font-size: var(--font-less-large);
}

h2 {
  font-size: var(--font-medium);
  margin: 2vh 0;
}

p {
  display: inline-block;
  /* inline 단위의 태그는 박스 안의 콘텐츠 크기만큼만 감싸주기 때문에 */
  /* inline-block으로 block 단위 태그로 변환해주면 보기 좋아짐 */
}

/* Initial-Open-Screen */
.Initial-Open-Screen {
  position: fixed;
  /* absolute라고 하면 x-overflow 이슈 발생함 주의! */
  /* 왜냐하면 absolute 자체가 부모박스에서 벗어나는 역할을 하기 때문 */
  z-index: 9999;
  width: 100%;
  height: 100%;
  /* 포지션 absolute는 원래 소속되어 있는 박스를 벗어나기 때문에 */
  /* z-index를 통해서 우선 보여지는 것을 absolute로 지정된 것끼리 */
  /* 우선순위 정해질 수 있음 */
  animation: InitialOpenScreen 1.5s ease-in-out forwards;
  /* fowards는 애니메이션 마지막 단계를 유지 */
}

.Initial-Open-Screen-Logo {
  position: absolute;
  top: 0;
  display: flex;
  justify-content: center;
  align-items: center;
  width: 100vw;
  height: 100vh;
}

@keyframes InitialOpenScreen {
  from {
    visibility: visible;
    opacity: 1;
  }
  to {
    visibility: hidden;
    opacity: 0;
  }
  /* 만약 opacity 혼자 쓴다면 visibility로 가려지지 않았기 떄문에 */
  /* 본문의 버튼이 클릭이 안됨 */
  /* 그래서 둘다 같이 써줘야 함 */
}
/* nav-bar: header */
.nav-bar {
  position: sticky;
  top: 0;
  display: flex;
  flex-direction: row;
  justify-content: space-between;
  align-items: center;
  background-color: transparent;
  color: var(--color-yellow);
  font-size: var(--font-regular);
  font-weight: var(--weight-bold);
  z-index: 999;
  padding: 0 25px;
}

.nav-bar-color-bgcolor {
  color: var(--color-white);
  background-color: var(--color-yellow);
}

.nav-bar_logo {
  display: flex;
  flex-direction: row;
  align-items: center;
}

.origin-logo {
  width: 60px;
  height: 60px;
  border-radius: 0;
  background-color: transparent;
  margin: 5px;
  display: block;
}

.changed-logo {
  display: none;
  width: 60px;
  height: 60px;
  border-radius: 0;
  margin: 5px;
  position: absolute;
  left: 25px;
}

.logo-show-up {
  display: block;
}

.nav-bar_contents span {
  margin: 5px;
}

.bars-toggle-btn {
  display: none;
  font-size: var(--font-medium);
  background-color: var(--color-yellow);
  color: var(--color-white);
}

/* progessing bar  */
.progressing-bar {
  z-index: 99999999;
  position: fixed;
  top: 70px;
  left: 0;
  width: 100%;
  height: 8px;
}

.progressing-bar-colored {
  width: 0;
  height: 8px;
  background-color: var(--color-dark-orange);
}

/* About me */
/* background */
.about-me {
  display: flex;
  flex-direction: row;
}

.about-me_bg1 {
  width: 40%;
  height: 80vh;
  background-color: var(--color-grey-yellow);
}

.about-me_bg2 {
  width: 60%;
  height: 80vh;
  background-color: var(--color-light-yellow);
}

/* About me profile article */
/* about-me_profile_part1 */
.about-me_profile {
  position: absolute;
  top: 15vh;
  left: 5vw;
  display: flex;
  flex-direction: row;
  z-index: 1;
}

.about-me_profile_part1 {
  background-color: var(--color-light-yellow);
  flex-basis: 40%;
  padding: 15px;
}

.about-me_profile_part2 {
  background-color: var(--color-white);
  flex-basis: 60%;
  padding: 15px;
}

.about-me_profile_part1_content1 {
  display: flex;
  flex-direction: column;
  align-items: center;
}

.about-me_profile_part1_content1 img {
  margin-bottom: 10px;
}

.about-me_profile_part1_content1 :nth-child(2) {
  font-size: var(--font-medium);
  font-weight: var(--weight-bold);
}

.about-me_profile_part1_content1 :nth-child(4) {
  font-size: var(--font-small);
  font-weight: var(--weight-bold);
  margin-bottom: 10px;
}

.about-me_profile_part1_content1_smallBar {
  width: 3vw;
  height: 0.4vh;
  background-color: var(--color-yellow);
  margin: 10px;
  margin-bottom: 5px;
}

.about-me_profile_part1_logo {
  display: flex;
  flex-direction: row;
  justify-content: center;
}

.about-me_profile_part1_logo a {
  font-size: var(--font-less-large);
  margin: 10px;
}

/* About me profile article */
/* about-me_profile_part2 */
.about-me_profile_part2 {
  display: flex;
  flex-direction: column;
}

.about-me_profile_part2_header {
  font-size: var(--font-large);
  font-weight: var(--weight-bold);
}

.about-me_profile_part2_job {
  font-size: var(--font-medium);
  font-weight: var(--weight-bold);
  margin-top: 25px;
  margin-bottom: 25px;
}

.about-me_profile_part2_href {
  display: flex;
  flex-direction: row;
  justify-content: space-around;
}

.about-me_profile_part2_href button {
  height: 8vh;
  font-size: var(--font-regular);
  font-weight: var(--weight-semi-bold);
  background-color: var(--color-yellow);
  color: var(--color-white);
  border-radius: 50%;
}

.about-me_profile_part2 p {
  font-size: var(--font-small);
  font-weight: var(--weight-semi-bold);
  margin: 10px;
}

.about-me_profile_part2_cnt2 {
  display: flex;
  flex-direction: column;
}

.about-me_profile_part2_cnt2 span {
  display: flex;
  justify-content: flex-end;
  margin: 10px;
}

/* resume part */
.resume {
  display: flex;
  flex-direction: column;
}

h1 span {
  font-size: var(--font-large);
  font-weight: var(--weight-bold);
}

.resume_skills_download {
  display: flex;
  flex-direction: row;
  justify-content: space-between;
  align-items: center;
  padding: 0 15px;
}

.resume_skills_download button {
  height: 5vh;
  font-size: var(--font-regular);
  font-weight: var(--weight-semi-bold);
  background-color: var(--color-blue);
  color: var(--color-white);
  border-radius: var(--size-border-radius);
}

.resume article i {
  width: 200px;
  height: 200px;
  border-radius: 50%;
  display: flex;
  justify-content: center;
  align-items: center;
  font-size: 80px;
  margin-bottom: 25px;
  border: 1px solid var(--color-orange);
  color: var(--color-orange);
}

.resume article i:hover {
  transform: rotate(-45deg) scale(1.1);
  color: var(--color-dark-orange);
  border: 1px solid var(--color-dark-orange);
  transition: all var(--animation-duration) linear;
}

.resume-logo-box div {
  display: flex;
  flex-direction: column;
  justify-content: center;
  align-items: center;
}

.resume-logo-box div span {
  font-size: var(--font-medium);
  color: var(--color-black);
  font-weight: var(--weight-bold);
  margin-bottom: 20px;
}

.resume-logo-box div p {
  margin: 0;
  font-size: var(--font-small);
}

/* resume skills, tools, ets part */
.skills-tools-etc {
  display: flex;
  flex-direction: row;
  justify-content: center;
  /* align-items: center; */
  background-color: var(--color-light-yellow);
  /* flex 너무 남발하지 말자 (생각하고 쓰자) */

  /* 같은 상자안에서 2개의 나열된 상자 높이가 안 맞을때 생각해보기 */
  /* align-items 세로축 기준으로 정렬하면 세로축 기준으로 중앙 */
  /* 정렬을 하기때문에 위, 아래 빈공간이 생길 수 밖에 없다. */
  /* 그래서 맞지 않는 것임. (생각하고 쓰자) */
  /* margin: auto 도 마찬가지임 (같은 맥락임) */
}

.skills {
  display: flex;
  flex-direction: column;
  justify-content: center;
  align-items: center;
  background-color: var(--color-dark-grey);
  flex-basis: 60%;
  color: var(--color-white);
}

.skills-name-per {
  display: flex;
  flex-direction: row;
  justify-content: space-between;
  font-size: var(--font-regular);
}

.tools-etc {
  flex-basis: 40%;
  color: var(--color-white);
  text-align: center;
}

.tools-etc div {
  display: flex;
  flex-direction: column;
  justify-content: center;
  align-items: center;
}

.tools-etc-tools-box {
  background-color: var(--color-grey);
  width: 100%;
  padding: 2vh 0;
}

.tools-etc-etc-box {
  background-color: var(--color-light-grey);
  width: 100%;
  padding: 2vh 0;
}

.tools-etc-tools-box ul {
  padding: 0 20px;
}

.tools-etc-etc-box ul {
  padding: 0 20px;
}

.skills-bar {
  width: 50vw;
  height: 4px;
  background-color: var(--color-dark-white);
  margin-bottom: 40px;
}

.skills-value-for-html {
  width: 99%;
  height: 4px;
  background-color: var(--color-orange);
}

.skills-value-for-css {
  width: 90%;
  height: 4px;
  background-color: var(--color-orange);
}

.skills-value-for-js {
  width: 90%;
  height: 4px;
  background-color: var(--color-orange);
}

.skills-value-for-ts {
  width: 80%;
  height: 4px;
  background-color: var(--color-orange);
}

.skills-value-for-react {
  width: 88%;
  height: 4px;
  background-color: var(--color-orange);
}

.skills-value-for-nodejs {
  width: 77%;
  height: 4px;
  background-color: var(--color-orange);
}

/* experience and education part */
.experience-education {
  display: flex;
  width: 100%;
  flex-direction: column;
  background-color: var(--color-light-white);
  padding: 5vh 0;
  /* div끼리 높이가 안 맞는 것은 부모, 자식 상자 간에 */
  /* 너비, 높이 비율을 정확하게 해주어야 하며 똑같은 */
  /* display 종류로 묶어준다.(이거는 나중에 생각해볼것..) */
}

.experience-part {
  display: flex;
  width: 100%;
  flex-direction: row;
  justify-content: space-between;
  border: 1px solid var(--color-light-white);
  /* margin: auto; */
  /* margin: auto 요소 중앙정렬하고 싶을 때 사용 */
  /* 높이가 옆상자에 비해서 약간 모자란 이유  */
  /* 지난번 flex-direction: column; aling-item: center 비슷한 이유 */
}

.experience-part div {
  width: 50%;
  display: flex;
  flex-direction: column;
  justify-content: center;
  background-color: var(--color-white);
  padding: 0 3vw;
}

.experience-part img {
  display: flex;
  width: 50px;
  height: 50px;
  margin-right: 10px;
}

.experience-part p {
  display: flex;
  flex-direction: row;
  align-items: center;
}

/* projects */
.projects div {
  display: flex;
  justify-content: center;
  margin-bottom: 5vh;
  flex-wrap: wrap;
}

.projects_btn {
  width: 300px;
  border-radius: var(--size-border-radius);
  border: 1px solid var(--color-dark-white);
  font-size: var(--font-regular);
  background-color: var(--color-white);
  position: relative;
}

.projects_btn span {
  width: 22px;
  height: 22px;
  border-radius: 50%;
  color: var(--color-white);
  background-color: var(--color-orange);
  font-size: var(--font-small);
  display: inline-block;
  line-height: 22px;
  margin: 0 5px;
  position: absolute;
  opacity: 0;
  top: -15px;
  transition: all var(--animation-duration) ease-in-out;
}

.projects_btn:hover {
  background-color: var(--color-yellow);
  color: var(--color-white);
}

.projects_btn:hover span {
  top: 3px;
  opacity: 1;
}

.projects_btn.selected:active,
.selected:hover span {
  top: 3px;
  opacity: 1;
}

.prj-pic {
  width: 280px;
  height: 250px;
  background-color: var(--color-light-white);
  padding: 10px 0;
  border: 1px solid var(--color-white);
  display: flex;
  justify-content: center;
  align-items: center;
}

.prj-pic img {
  width: 230px;
  height: 200px;
}

.prj-pic-remove {
  display: none;
}

.selected {
  background-color: var(--color-yellow);
  color: var(--color-white);
}

.anim-out {
  opacity: 0;
  transform: translateY(50px) scale(0.94);
  transition: all var(--animation-duration) ease-in;
}

/* testimonials part */
.testimonials {
  background-color: var(--color-light-white);
  padding: 5vh 5vw;
}

.testimonials-part {
  display: flex;
  flex-direction: row;
  margin: 5vh;
}

.testimonials-part p {
  background-color: var(--color-white);
  margin: 2vh;
  padding: 5vh 5vw;
  font-size: var(--font-small);
  font-weight: var(--weight-semi-bold);
  position: relative;
}

.testimonials-part span:nth-child(even) {
  font-size: var(--font-small);
  font-weight: var(--weight-semi-bold);
  color: var(--color-dark-pink);
  position: absolute;
  bottom: 1vh;
  right: 1vw;
}

.testimonials-part span:nth-child(odd) {
  font-size: var(--font-small);
  font-weight: var(--weight-semi-bold);
  color: var(--color-dark-pink);
  position: absolute;
  bottom: 1vh;
  right: 1vw;
}

/* profile-footer part */
.profile-footer {
  display: flex;
  flex-direction: row;
  justify-content: space-between;
  padding: 0 5vw;
  font-size: var(--font-micro);
}

.profile-footer-call-email-follow {
  display: flex;
  flex-direction: row;
}

.footer-name {
  font-weight: var(--weight-bold);
}

.profile-footer-right {
  display: flex;
  flex-direction: column;
  justify-content: center;
  padding: 1vh 1vw;
  font-weight: var(--weight-bold);
}

.profile-footer-call {
  display: flex;
  flex-direction: column;
  align-items: center;
  padding: 1vh 1vw;
}

.profile-footer-email {
  display: flex;
  flex-direction: column;
  align-items: center;
  padding: 1vh 1vw;
}

.profile-footer-follow {
  display: flex;
  flex-direction: column;
  align-items: center;
  padding: 1vh 1vw;
}

.logo-icon {
  display: flex;
  flex-direction: row;
  font-size: var(--font-regular);
}

.logo-icon i {
  margin: 5px;
}

.profile-footer-info {
  margin-top: 5px;
}

/* arrow-up mark */
.arrow-up {
  display: none;
  position: fixed;
  bottom: 50px;
  right: 50px;
  justify-content: center;
  align-items: center;
  width: 80px;
  height: 80px;
  font-size: 50px;
  border-radius: 50%;
  color: var(--color-white);
  background-color: var(--color-yellow);
  cursor: pointer;
}

.appear {
  display: flex;
}

/* Responsive Screen */
@media screen and (max-width: 768px) {
  :root {
    /* Font size */
    --font-large: 30px;
    --font-medium: 20px;
    --font-regular: 16px;
    --font-small: 14px;
    --font-micro: 12px;
  }

  .bars-toggle-btn {
    display: block;
    background-color: var(--color-white);
    color: var(--color-yellow);
  }

  .bars-toggle-btn-change-bgColor {
    background-color: var(--color-yellow);
    color: var(--color-white);
  }

  .nav-bar_logo span {
    display: none;
  }

  .nav-bar_contents {
    display: none;
    flex-direction: column;
    text-align: center;
    color: var(--color-yellow);
    width: 100%;
    background-color: var(--color-white);
    position: absolute;
    left: 0;
    top: 70px;
  }

  .change_color {
    background-color: var(--color-yellow);
    color: var(--color-white);
  }

  .open {
    display: flex;
  }

  .about-me {
    display: flex;
    flex-direction: column;
  }

  .about-me_profile {
    position: static;
    display: flex;
    flex-direction: column;
  }

  .about-me_bg1 {
    display: none;
  }

  .about-me_bg2 {
    display: none;
  }

  .resume article {
    display: flex;
    flex-direction: column;
  }

  .resume-logo-box div {
    margin-bottom: 50px;
  }

  .experience-education article {
    display: flex;
    flex-direction: column;
  }

  .projects div {
    display: flex;
    flex-direction: column;
    align-items: center;
  }

  .projects_btn span {
    width: 16px;
    height: 16px;
    line-height: 16px;
  }

  .prj-pic {
    flex-grow: 1;
    /* vh vw는 반응형에 대응하는 장점이 있지만 flex-grow에 적용이 안됨 */
  }

  .prj-pic img {
    flex-grow: 1;
    /* vh vw는 반응형에 대응하는 장점이 있지만 flex-grow에 적용이 안됨 */
  }
  .testimonials-part {
    display: flex;
    flex-direction: column;
    justify-content: center;
    align-items: center;
  }

  .testimonials-part img {
    order: 1;
  }

  .testimonials-part p {
    order: 2;
  }

  .profile-footer-call-email-follow {
    display: flex;
    flex-direction: column;
  }

  .arrow-up {
    width: 40px;
    height: 40px;
    font-size: 20px;
    border-radius: 50%;
    bottom: 16px;
    right: 16px;
  }
}

/* 이 프로젝트 끝나고 BEM 네이밍 규칙 다시 공부해보기*/
/* 1. B(Block)
  기본적인 component를 나타낸다.
  위에서 언급했 듯이 하이픈(-)을 사용하면 된다.

  .stick-man {
  }

2. E(Elements)
  요소(element)를 나타낸다.
  component를 이루고 있는 구성요소를 표현할 때 사용한다.
  component(B) 이름 뒤에 **2개의 밑줄(__)**을 사용하여 명명한다.

  .stick-man__head {
  }
  .stick-man__arms {
  }

3. M(Modifier)
  수정(Modifier)을 나타낸다.
  위에서 나온 stick-man이 blue 또는 red를 가질 수 있다면??
  component를 수정한다는 의미로, component명 뒤에 **하이픈 두개(--)**를 사용하여 명명한다.\

  .stick-man__head--small {
  }
  .stick-man__head--big {
  }

4. js- 클래스 이름 사용
  DOM element 와의 관계를 나타내기 위해 js-라는 이름을 사용하는 것이다.

  <div class="site-navigation js-site-navigation">
  </div>

  //the JavaScript code
  const nav = document.querySelector('.js-site-navigation') */
